apiVersion: apps/v1
kind: Deployment
metadata:
  name: threat-intel-api
  namespace: threat-intel
  labels:
    app: threat-intel-api
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: threat-intel-api
  template:
    metadata:
      labels:
        app: threat-intel-api
        version: v1
    spec:
      containers:
      - name: threat-intel-api
        image: threat-intel-graph:latest
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: NEO4J_URI
          valueFrom:
            configMapKeyRef:
              name: threat-intel-config
              key: NEO4J_URI
        - name: NEO4J_DATABASE
          valueFrom:
            configMapKeyRef:
              name: threat-intel-config
              key: NEO4J_DATABASE
        - name: NEO4J_PASSWORD
          valueFrom:
            secretKeyRef:
              name: threat-intel-secrets
              key: neo4j-password
        - name: API_HOST
          valueFrom:
            configMapKeyRef:
              name: threat-intel-config
              key: API_HOST
        - name: API_PORT
          valueFrom:
            configMapKeyRef:
              name: threat-intel-config
              key: API_PORT
        - name: KAFKA_BROKERS
          valueFrom:
            configMapKeyRef:
              name: threat-intel-config
              key: KAFKA_BROKERS
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: threat-intel-config
              key: LOG_LEVEL
        - name: LOG_FORMAT
          valueFrom:
            configMapKeyRef:
              name: threat-intel-config
              key: LOG_FORMAT
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/v1/health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/v1/health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: neo4j
  namespace: threat-intel
  labels:
    app: neo4j
spec:
  replicas: 1
  selector:
    matchLabels:
      app: neo4j
  template:
    metadata:
      labels:
        app: neo4j
    spec:
      containers:
      - name: neo4j
        image: neo4j:5.14-community
        ports:
        - containerPort: 7474
          name: http
        - containerPort: 7687
          name: bolt
        env:
        - name: NEO4J_AUTH
          value: "neo4j/threat_intel_password"
        - name: NEO4J_PLUGINS
          value: '["apoc"]'
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        volumeMounts:
        - name: neo4j-data
          mountPath: /data
        - name: neo4j-logs
          mountPath: /logs
      volumes:
      - name: neo4j-data
        persistentVolumeClaim:
          claimName: neo4j-pvc
      - name: neo4j-logs
        persistentVolumeClaim:
          claimName: neo4j-logs-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
  namespace: threat-intel
  labels:
    app: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - name: kafka
        image: confluentinc/cp-kafka:7.4.0
        ports:
        - containerPort: 9092
          name: kafka
        env:
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "zookeeper-service:2181"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "PLAINTEXT://kafka-service:9092"
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
          value: "true"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
  namespace: threat-intel
  labels:
    app: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
      - name: zookeeper
        image: confluentinc/cp-zookeeper:7.4.0
        ports:
        - containerPort: 2181
          name: zookeeper
        env:
        - name: ZOOKEEPER_CLIENT_PORT
          value: "2181"
        - name: ZOOKEEPER_TICK_TIME
          value: "2000"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "250m"


